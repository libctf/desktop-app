[package]
name = "ctf-rs-ui"
description = "Tauri and Leptos based cross-platform Desktop Application for CTF-rs"
version = "0.1.0"
edition = "2024"
license = "AGPL-3.0-or-later"
readme = "README.md"
homepage = "https://github.com/libctf/frontend"
keywords = ["tauri", "ctf", "ui", "desktop", "leptos"]
categories = ["web-programming::http-client", "gui"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
leptos = { version = "0.7", features = ["csr"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
js-sys = "0.3"
serde = { version = "1", features = ["derive"] }
serde-wasm-bindgen = "0.6"
console_error_panic_hook = "0.1.7"
glib = "0.20.0"

[dev-dependencies]
glib = "0.20.0"


[workspace]
members = ["src-tauri"]

# [profile.dev]
# incremental = true          # Compile your binary in smaller steps.
# rustflags = ["-Zthreads=8"] # Better compile performance.

# [profile.release]
# codegen-units = 1                            # Allows LLVM to perform better optimization.
# lto = true                                   # Enables link-time-optimizations.
# opt-level = "s"                              # Prioritizes small binary size. Use `3` if you prefer speed.
# panic = "abort"                              # Higher performance by disabling panic handlers.
# strip = true                                 # Ensures debug symbols are removed.
# trim-paths = "all"                           # Removes potentially privileged information from your binaries.
# rustflags = ["-Cdebuginfo=0", "-Zthreads=8"] # Better compile performance.
